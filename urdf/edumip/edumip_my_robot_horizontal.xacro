<?xml version="1.0"?>
<robot name="edumip" xmlns:xacro="http://ros.org/wiki/xacro">

<!-- Numerical Macros - units are meters and raidans -->
<xacro:property name="wheel_separation" value="0.070"/>
<xacro:property name="wheel_radius" value="0.034"/>
<xacro:property name="wheel_width" value="0.010"/>
<xacro:property name="body_height" value="0.1"/>
<xacro:property name="body_width" value="0.050"/>
<xacro:property name="body_length" value="0.035"/>
<xacro:property name="PI" value="3.1415926"/>
<xacro:property name="hokuyo_link" value="0.02"/>

<xacro:property name="front_base_height" value="0.005"/>
<xacro:property name="front_base_radius" value="0.01"/>

<material name="light_pink">
	<color rgba="1.0 0.7 0.7 0.5"/>
</material>

<material name="light_yellow">
	<color rgba="1.0 1.0 0.8 0.5"/>
</material>

<material name="orange">
	<color rgba="1.0 0.3 0.0 0.5"/>
</material>

<material name="burlywood">
	<color rgba="0.9 0.7 0.5 0.5"/>
</material>

<material name="skyblue">
    <color rgba="0.5 0.8 0.9 0.5"/>
</material>

<!-- edumip body -->
<link name="edumip_body">
	<collision>
		<origin xyz="0 0 ${0.5*body_length}" rpy="0 0 0"/>
		<geometry>
			<box size="${body_height} ${body_width} ${body_length}"/>
		</geometry>
	</collision>

	<visual>
		<origin xyz="0 0 ${0.5*body_length}" rpy="0 0 0"/>
		<geometry>
			<box size="${body_height} ${body_width} ${body_length}"/>
		</geometry>
		<material name="light_pink"/>
	</visual>

	<inertial>
		<origin xyz="0 0 ${body_length}" rpy="0 0 0"/>
		<mass value="0.580"/>
		<inertia ixx="6.0e-3" ixy="0" ixz="0" iyy="6.0e-3" iyz="0" izz="6.0e-3"/>
	</inertial>
</link>

<gazebo reference="edumip_body">
	<material>Gazebo/RedBright</material>
	<mu1>1.5</mu1>
	<mu2>1.5</mu2>
	<fdir1>1 0 0</fdir1>
	<kp>1000000.0</kp>
	<kd>100.0</kd>
	<maxVel>1.0</maxVel>
	<minDepth>0.01</minDepth>
</gazebo>

<!-- two wheels -->
<xacro:macro name="wheel" params="suffix reflect rviz_color gazebo_color">

	<link name="wheel${suffix}">
		<collision>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
			<geometry>
				<cylinder radius="${wheel_radius}" length="${wheel_width}"/>
			</geometry>
		</collision>

		<visual>
			<origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
			<geometry>
				<cylinder radius="${wheel_radius}" length="${wheel_width}"/>
			</geometry>
			<material name="${rviz_color}"/>
		</visual>

		<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="0.030"/>
			<inertia ixx="1.75e-5" ixy="0" ixz="0" iyy="1.75e-5" iyz="0" izz="1.75e-5"/>
		</inertial>
	</link>

	<joint name="joint${suffix}" type="continuous">
		<axis xyz="0 1 0" rpy="0 0 0"/>
		<parent link="edumip_body"/>
		<child link="wheel${suffix}"/>
		<origin xyz="${0.5*body_height} ${wheel_separation/2*reflect} 0" rpy="0 0 0"/>
	</joint>

	<gazebo reference="wheel${suffix}">
		<material>${gazebo_color}</material>
		<mu1>0.2</mu1>
		<mu2>0.2</mu2>
	</gazebo>

</xacro:macro>

<xacro:wheel suffix="L" reflect="1" rviz_color="light_yellow" gazebo_color="Gazebo/ZincYellow"/>
<xacro:wheel suffix="R" reflect="-1" rviz_color="orange" gazebo_color="Gazebo/Orange"/>

<!-- front wheel and its base to compose a ball joint -->
<!-- front wheel base -->

<link name="front_wheel_base">
    <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="${front_base_radius}" length="${front_base_height}"/>
        </geometry>
    </collision>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
            <cylinder radius="${front_base_radius}" length="${front_base_height}"/>
        </geometry>
        <material name="burlywood"/>
    </visual>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
		<mass value="0.030"/>
        <inertia ixx="1.75e-5" ixy="0" ixz="0" iyy="1.75e-5" iyz="0" izz="1.75e-5"/>
    </inertial>
</link>

<joint name="front_wheel_base_joint" type="fixed">
    <axis xyz="0 0 1" rpy="0 0 0"/>
    <parent link="edumip_body"/>
    <child link="front_wheel_base"/>
    <origin xyz="-${0.5*body_height-0.01} 0 ${-front_base_height/2}" rpy="0 0 0"/>
	<limit lower="${-PI/3}" upper="${PI/3}" effort="1e2" velocity="1e0"/>
	<dynamcis damping="2e2" friction="1e2"/>
</joint>

<gazebo reference="front_wheel_base">
    <material>Gazebo/SkyBlue</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
	<kp value="10000000.0" />
	<kd value="1.0" />
	<fdir1 value="1 0 0"/>
</gazebo>

<!-- front wheel -->
<link name="front_wheel">
    <collision>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
            <cylinder radius="${(wheel_radius-front_base_height)/2}" length="${wheel_width/2}"/>
        </geometry>
    </collision>
    <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
            <cylinder radius="${(wheel_radius-front_base_height)/2}" length="${wheel_width/2}"/>
        </geometry>
        <material name="skyblue"/>
    </visual>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
		<mass value="0.080"/>
        <inertia ixx="1.75e-5" ixy="0" ixz="0" iyy="1.75e-5" iyz="0" izz="1.75e-5"/>
    </inertial>
</link>

<joint name="front_wheel_joint" type="continuous">
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <parent link="front_wheel_base"/>
    <child link="front_wheel"/>
    <origin xyz="0 0  ${-wheel_radius/2}" rpy="0 0 0"/>
</joint>

<gazebo reference="front_wheel">
    <material>Gazebo/Turquoise</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
</gazebo>

<!-- Hokuyo Laser -->
<link name="laser">
	<collision>
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<geometry>
			<mesh filename="package://final_project/meshes/hokuyo.dae" scale="0.1 0.1 0.1"/>
		</geometry>
	</collision>

	<visual>
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<geometry>
			<mesh filename="package://final_project/meshes/hokuyo.dae" scale="0.1 0.1 0.1"/>
		</geometry>
	</visual>

	<inertial>
		<mass value="1e-5"/>
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
	</inertial>
</link>

<joint name="hokuyo_joint" type="fixed">
	<origin xyz="-${body_height/2} 0 ${body_length+0.01}" rpy="0 0 0"/>
	<parent link="edumip_body"/>
	<child link="laser"/>
</joint>

<gazebo reference="laser">
	<sensor type="gpu_ray" name="head_hokuyo_sensor">
		<pose>0 0 0 0 0 0</pose>
		<visualize>true</visualize>
		<update_rate>40</update_rate>
		<ray>
			<scan>
				<horizontal>
					<samples>720</samples>
					<resolution>1</resolution>
					<min_angle>-${PI/2}</min_angle>
					<max_angle>${PI/2}</max_angle>
				</horizontal>
			</scan>
			<range>
				<min>0.10</min>
				<max>20.0</max>
				<resolution>0.01</resolution>
			</range>
			<noise>
				<type>gaussian</type>
				<mean>0.0</mean>
				<stddev>0.01</stddev>
			</noise>
		</ray>
		<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
			<topicName>/edumip/laser/scan</topicName>
			<frameName>laser</frameName>
		</plugin>
	</sensor>
</gazebo>

<!-- edumip_balance plugin -->
<gazebo>
	<plugin name="edumip_horizontal_ros_gazebo_plugin" filename="libedumip_balance_ros_gazebo_plugin.so">
		<rosDebugLevel>3</rosDebugLevel>
		<updateRate>100</updateRate>
		<robotBaseFrame>edumip_body</robotBaseFrame>
		<frontBase>front_wheel_base_joint</frontBase>
		<frontJoint>front_wheel_joint</frontJoint>
		<leftJoint>jointL</leftJoint>
		<rightJoint>jointR</rightJoint>
		<wheelSeparation>${wheel_separation}</wheelSeparation>
		<wheelDiameter>${wheel_radius*2.0}</wheelDiameter>
		<commandTopic>/edumip/cmd</commandTopic>
		<stateTopic>/edumip/state</stateTopic>
	</plugin>
</gazebo>

<!-- add AR tag -->
<link name="artag_edumip">
	<visual>
<geometry>
		<mesh filename="package://final_project/meshes/artag.dae" scale="1.0 1.0 1.0"/>
</geometry>
	</visual>   
	<inertial>
<mass value="1e-6" />
<inertia ixx="1e-6" ixy="0.0" ixz="0.0"
		iyy="1e-6" iyz="0.0"
		izz="1e-6" />
	</inertial>
</link>

<joint name="artag_edumip_joint" type="fixed">
	<origin xyz="0.06 0 ${body_length+0.001}" rpy="0 0 ${-PI/2}"/>	<!-- rotate to keep up with base frame-->
	<!-- origin xyz="0 0 ${body_length+0.001}" rpy="0 0 ${-PI/2}"/-->	<!-- rotate to keep up with base frame-->
	<parent link="edumip_body"/>
	<child link="artag_edumip"/>
</joint>

</robot>
